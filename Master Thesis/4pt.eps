%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 24.03.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 294 63
%%HiResBoundingBox: 0 0 293.701 62.852
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NFPOHH+LMRoman10-Regular
16 dict begin
/FontName /NFPOHH+LMRoman10-Regular_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-430 -290 1417 1127] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
dup 87 /c57 put
dup 88 /c58 put
dup 89 /c59 put
dup 90 /c5a put
dup 91 /c5b put
dup 92 /c5c put
dup 93 /c5d put
dup 94 /c5e put
dup 95 /c5f put
dup 96 /c60 put
dup 97 /c61 put
dup 98 /c62 put
dup 99 /c63 put
dup 100 /c64 put
dup 101 /c65 put
dup 102 /c66 put
dup 103 /c67 put
dup 104 /c68 put
dup 105 /c69 put
dup 106 /c6a put
dup 107 /c6b put
108 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FA6B0AF338BD4E48F07258C8AB349EE790EF474E6D540CD5017BDA227D234CDE
C5B56059723DE2D25E43567EA970111F9099EFA91396AD179BEECC68CE62455C
2A12EE48EDABA012CC8A5481822B2C11FC74EEBE5D3DA05BE21FC8AE2FEFE4AD
983506712B8ACDE3A061C03B58F71C5891EA5110035AE6784194758ACE2015E6
17BB845C059ABEE6B1082AFBDC2BB42FFCAEEE0B59841E7C9214F9096CA6CBA9
142671BB17558E33C4474A06282677E09E3885A1C003C2A6DD3A6F88E1A52A73
5A1054331B8A1523EEBF4E5016375DD16970A3BD4A08CEFA9C5CE9AF8AB63E5F
4CB0CADD898F710C2496E4ED4A09D54FA74709C83B0824F96BC972F4FD3D6E6F
0154938997BD3BCC0C7675FF515827033C405D61C353DC2E204B80E6D294B4E3
3710F009F10A04C197F1683B18D7E32956219B92D2CCCB4F6E7B12518982C990
5C35F26929634AEF80B4650E132855E8D11A4411A070F09788FC7A9DA9BDE36E
606A58BE8C80F61B03A02324B8AF5C9D92B31D4991AD693A15E459C6E8D8D61C
44EF9DEC230E484D4661AC39F0A823FAFF37D820DD3E93097A1B47D8F8E779FB
B6E030D8173B3902F056EEB77A2344A9125ADED1B46A9177B27EDAD22CD43905
E377EB428E20230A5FACFE725FA8E08519AC19251CE716C7865F4D8E780129DE
C45E57ADC3E29E8D2D137C0227B72EB7B61EA464CBB0A69B649463081848596C
3F1D4DC0AF798DAF5B227E731736734725E108CBDB6DA21938185F540CD1BDA4
696D1A1E9DFBF5CC89C6CF0BB85F727110C9EEA2EB1305A066396AC9325B4FC0
D33598D9C22856F86382A10015185BFF668D77323F2789D37D1D4A1B02F4A2A6
DB8EF2BF6E0FBDC3C6C398AAEBB376A33F825B299A9F61A82DD339C1E172D33E
A46203F84AD195E2AC825C5C2E587C5FB809ABDA444C34BC8483E49D7D28AB28
C828387D8E5F09F42A647276AAB27ACA336C661DE7FC7BED8607FA240971FDA3
DC5E765026C7F677F6B4DCF3CAAD092BB709B5AB1CC92B7B37697E54CA373516
F60EC3A48C137E191512C27B8BAF3A4B8C4EF48761ED94CFDF4A78D51487D164
82AD580EA5F8A463047A5CE420A49CD42EA11AEC2B117D5F0B74519FEB64A139
B223E0594A135582E84A04BBBEF308696D9F245BD1B6B4917729385763150C7B
57911ABFF39CDBDAB6EE6BEB8919762B3D1C29BD496FB8CF63DCAF776E411F98
D0DD92B17BB70DE63D5FFB2847C143D273F7FCEB8FFB86325F39A5EA26F76F04
EC1A1C8D755B0F9A22DBF292142950004734B96EE8BB4CEF79ECDE5FFE7C758D
5331B92282D31042502AE554
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /NFPOHH+LMRoman10-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/NFPOHH+LMRoman10-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F17_0 /NFPOHH+LMRoman10-Regular 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 293.701 62.852 re
W
q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 5.811 6.638] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
q
q
[1 0 0 1 -2.49 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -3.321 -3.321] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 3.321 3.321] Tm
0 0 Td
/F17_0 9.96264 Tf
(\000k)
[4.98132
0] Tj
[1 0 0 1 3.321 3.321] cm
Q
[1 0 0 1 2.49 3.317] cm
Q
Q
q
Q
q
Q
q
q
[1 0 0 1 131.079 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -136.89 -3.321] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 136.89 3.321] Tm
0 0 Td
/F17_0 9.96264 Tf
(\000R)
[4.98132
0] Tj
[1 0 0 1 136.89 3.321] cm
Q
[1 0 0 1 -131.079 3.317] cm
Q
Q
q
q
[1 0 0 1 40.029 46.259] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -45.84 -52.897] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 45.84 52.897] Tm
0 0 Td
/F17_0 9.96264 Tf
(\000j)
[4.98132
0] Tj
[1 0 0 1 45.84 52.897] cm
Q
[1 0 0 1 -40.029 -46.259] cm
Q
Q
q
q
[1 0 0 1 82.549 46.04] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -88.36 -52.678] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 88.36 52.678] Tm
0 0 Td
/F17_0 9.96264 Tf
(\0009)
[4.98132
0] Tj
[1 0 0 1 88.36 52.678] cm
Q
[1 0 0 1 -82.549 -46.04] cm
Q
Q
q
q
q
q
[2.98883 2.98883] 0 d
6.0105 0 m
42.52022 0 l
S
Q
Q
Q
q
q
q
[2.98883 2.98883] 0 d
42.52022 0 m
85.04044 0 l
S
Q
Q
Q
q
q
q
[2.98883 2.98883] 0 d
85.04044 0 m
127.56065 0 l
S
Q
Q
Q
q
q
42.52022 42.52022 m
41.1379 42.16592 40.02953 40.98035 40.02953 39.58931 c
40.02953 38.19827 41.1379 37.0127 42.52022 36.65839 c
43.90253 36.3041 45.01091 36.78108 45.01091 37.46352 c
45.01091 38.14597 43.90253 38.62294 42.52022 38.26865 c
41.1379 37.91391 40.02953 36.72833 40.02953 35.3373 c
40.02953 33.94627 41.1379 32.76068 42.52022 32.40639 c
43.90253 32.0521 45.01091 32.52908 45.01091 33.21152 c
45.01091 33.89395 43.90253 34.37094 42.52022 34.01663 c
41.1379 33.6619 40.02953 32.47633 40.02953 31.08528 c
40.02953 29.69426 41.1379 28.50867 42.52022 28.15437 c
43.90253 27.80008 45.01091 28.27707 45.01091 28.9595 c
45.01091 29.64195 43.90253 30.11893 42.52022 29.76463 c
41.1379 29.4099 40.02953 28.22432 40.02953 26.83328 c
40.02953 25.44225 41.1379 24.25667 42.52022 23.90237 c
43.90253 23.54807 45.01091 24.02505 45.01091 24.70749 c
45.01091 25.38994 43.90253 25.86691 42.52022 25.51262 c
41.1379 25.15788 40.02953 23.9723 40.02953 22.58127 c
40.02953 21.19025 41.1379 20.00465 42.52022 19.65036 c
43.90253 19.29607 45.01091 19.77306 45.01091 20.45549 c
45.01091 21.13794 43.90253 21.61491 42.52022 21.26062 c
41.1379 20.90587 40.02953 19.7203 40.02953 18.32925 c
40.02953 16.93823 41.1379 15.75264 42.52022 15.39835 c
43.90253 15.04405 45.01091 15.52104 45.01091 16.20348 c
45.01091 16.88593 43.90253 17.3629 42.52022 17.0086 c
41.1379 16.65387 40.02953 15.46829 40.02953 14.07726 c
40.02953 12.68622 41.1379 11.50064 42.52022 11.14635 c
43.90253 10.79204 45.01091 11.26904 45.01091 11.95146 c
45.01091 12.63391 43.90253 13.11089 42.52022 12.75659 c
41.1379 12.40186 40.02953 11.21628 40.02953 9.82524 c
40.02953 8.43422 41.1379 7.24863 42.52022 6.89433 c
43.90253 6.54004 45.01091 7.01703 45.01091 7.69946 c
45.01091 8.38191 43.90253 8.85889 42.52022 8.5046 c
41.1379 8.14986 40.02953 6.96428 40.02953 5.57324 c
40.02953 4.1822 41.1379 2.99663 42.52022 2.64232 c
42.52022 0 l
S
Q
Q
q
q
85.04044 42.52022 m
83.65813 42.16592 82.54974 40.98035 82.54974 39.58931 c
82.54974 38.19827 83.65813 37.0127 85.04044 36.65839 c
86.42276 36.3041 87.53113 36.78108 87.53113 37.46352 c
87.53113 38.14597 86.42276 38.62294 85.04044 38.26865 c
83.65813 37.91391 82.54974 36.72833 82.54974 35.3373 c
82.54974 33.94627 83.65813 32.76068 85.04044 32.40639 c
86.42276 32.0521 87.53113 32.52908 87.53113 33.21152 c
87.53113 33.89395 86.42276 34.37094 85.04044 34.01663 c
83.65813 33.6619 82.54974 32.47633 82.54974 31.08528 c
82.54974 29.69426 83.65813 28.50867 85.04044 28.15437 c
86.42276 27.80008 87.53113 28.27707 87.53113 28.9595 c
87.53113 29.64195 86.42276 30.11893 85.04044 29.76463 c
83.65813 29.4099 82.54974 28.22432 82.54974 26.83328 c
82.54974 25.44225 83.65813 24.25667 85.04044 23.90237 c
86.42276 23.54807 87.53113 24.02505 87.53113 24.70749 c
87.53113 25.38994 86.42276 25.86691 85.04044 25.51262 c
83.65813 25.15788 82.54974 23.9723 82.54974 22.58127 c
82.54974 21.19025 83.65813 20.00465 85.04044 19.65036 c
86.42276 19.29607 87.53113 19.77306 87.53113 20.45549 c
87.53113 21.13794 86.42276 21.61491 85.04044 21.26062 c
83.65813 20.90587 82.54974 19.7203 82.54974 18.32925 c
82.54974 16.93823 83.65813 15.75264 85.04044 15.39835 c
86.42276 15.04405 87.53113 15.52104 87.53113 16.20348 c
87.53113 16.88593 86.42276 17.3629 85.04044 17.0086 c
83.65813 16.65387 82.54974 15.46829 82.54974 14.07726 c
82.54974 12.68622 83.65813 11.50064 85.04044 11.14635 c
86.42276 10.79204 87.53113 11.26904 87.53113 11.95146 c
87.53113 12.63391 86.42276 13.11089 85.04044 12.75659 c
83.65813 12.40186 82.54974 11.21628 82.54974 9.82524 c
82.54974 8.43422 83.65813 7.24863 85.04044 6.89433 c
86.42276 6.54004 87.53113 7.01703 87.53113 7.69946 c
87.53113 8.38191 86.42276 8.85889 85.04044 8.5046 c
83.65813 8.14986 82.54974 6.96428 82.54974 5.57324 c
82.54974 4.1822 83.65813 2.99663 85.04044 2.64232 c
85.04044 0 l
S
Q
Q
Q
Q
Q
Q
[1 0 0 1 148.51 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
q
q
[1 0 0 1 -2.491 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -151.83 -3.321] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 151.83 3.321] Tm
0 0 Td
/F17_0 9.96264 Tf
(\000k)
[4.98132
0] Tj
[1 0 0 1 151.83 3.321] cm
Q
[1 0 0 1 2.491 3.317] cm
Q
Q
q
Q
q
Q
q
q
[1 0 0 1 131.078 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -285.399 -3.321] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 285.399 3.321] Tm
0 0 Td
/F17_0 9.96264 Tf
(\000R)
[4.98132
0] Tj
[1 0 0 1 285.399 3.321] cm
Q
[1 0 0 1 -131.078 3.317] cm
Q
Q
q
q
[1 0 0 1 40.029 46.04] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -194.35 -52.678] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 194.35 52.678] Tm
0 0 Td
/F17_0 9.96264 Tf
(\0009)
[4.98132
0] Tj
[1 0 0 1 194.35 52.678] cm
Q
[1 0 0 1 -40.029 -46.04] cm
Q
Q
q
q
[1 0 0 1 82.548 46.259] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -236.869 -52.897] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 236.869 52.897] Tm
0 0 Td
/F17_0 9.96264 Tf
(\000j)
[4.98132
0] Tj
[1 0 0 1 236.869 52.897] cm
Q
[1 0 0 1 -82.548 -46.259] cm
Q
Q
q
q
q
q
[2.98883 2.98883] 0 d
6.0105 0 m
42.52022 0 l
S
Q
Q
Q
q
q
q
[2.98883 2.98883] 0 d
42.52022 0 m
85.04044 0 l
S
Q
Q
Q
q
q
q
[2.98883 2.98883] 0 d
85.04044 0 m
127.56065 0 l
S
Q
Q
Q
q
q
42.52022 42.52022 m
41.1379 42.16592 40.02953 40.98035 40.02953 39.58931 c
40.02953 38.19827 41.1379 37.0127 42.52022 36.65839 c
43.90253 36.3041 45.01091 36.78108 45.01091 37.46352 c
45.01091 38.14597 43.90253 38.62294 42.52022 38.26865 c
41.1379 37.91391 40.02953 36.72833 40.02953 35.3373 c
40.02953 33.94627 41.1379 32.76068 42.52022 32.40639 c
43.90253 32.0521 45.01091 32.52908 45.01091 33.21152 c
45.01091 33.89395 43.90253 34.37094 42.52022 34.01663 c
41.1379 33.6619 40.02953 32.47633 40.02953 31.08528 c
40.02953 29.69426 41.1379 28.50867 42.52022 28.15437 c
43.90253 27.80008 45.01091 28.27707 45.01091 28.9595 c
45.01091 29.64195 43.90253 30.11893 42.52022 29.76463 c
41.1379 29.4099 40.02953 28.22432 40.02953 26.83328 c
40.02953 25.44225 41.1379 24.25667 42.52022 23.90237 c
43.90253 23.54807 45.01091 24.02505 45.01091 24.70749 c
45.01091 25.38994 43.90253 25.86691 42.52022 25.51262 c
41.1379 25.15788 40.02953 23.9723 40.02953 22.58127 c
40.02953 21.19025 41.1379 20.00465 42.52022 19.65036 c
43.90253 19.29607 45.01091 19.77306 45.01091 20.45549 c
45.01091 21.13794 43.90253 21.61491 42.52022 21.26062 c
41.1379 20.90587 40.02953 19.7203 40.02953 18.32925 c
40.02953 16.93823 41.1379 15.75264 42.52022 15.39835 c
43.90253 15.04405 45.01091 15.52104 45.01091 16.20348 c
45.01091 16.88593 43.90253 17.3629 42.52022 17.0086 c
41.1379 16.65387 40.02953 15.46829 40.02953 14.07726 c
40.02953 12.68622 41.1379 11.50064 42.52022 11.14635 c
43.90253 10.79204 45.01091 11.26904 45.01091 11.95146 c
45.01091 12.63391 43.90253 13.11089 42.52022 12.75659 c
41.1379 12.40186 40.02953 11.21628 40.02953 9.82524 c
40.02953 8.43422 41.1379 7.24863 42.52022 6.89433 c
43.90253 6.54004 45.01091 7.01703 45.01091 7.69946 c
45.01091 8.38191 43.90253 8.85889 42.52022 8.5046 c
41.1379 8.14986 40.02953 6.96428 40.02953 5.57324 c
40.02953 4.1822 41.1379 2.99663 42.52022 2.64232 c
42.52022 0 l
S
Q
Q
q
q
85.04044 42.52022 m
83.65813 42.16592 82.54974 40.98035 82.54974 39.58931 c
82.54974 38.19827 83.65813 37.0127 85.04044 36.65839 c
86.42276 36.3041 87.53113 36.78108 87.53113 37.46352 c
87.53113 38.14597 86.42276 38.62294 85.04044 38.26865 c
83.65813 37.91391 82.54974 36.72833 82.54974 35.3373 c
82.54974 33.94627 83.65813 32.76068 85.04044 32.40639 c
86.42276 32.0521 87.53113 32.52908 87.53113 33.21152 c
87.53113 33.89395 86.42276 34.37094 85.04044 34.01663 c
83.65813 33.6619 82.54974 32.47633 82.54974 31.08528 c
82.54974 29.69426 83.65813 28.50867 85.04044 28.15437 c
86.42276 27.80008 87.53113 28.27707 87.53113 28.9595 c
87.53113 29.64195 86.42276 30.11893 85.04044 29.76463 c
83.65813 29.4099 82.54974 28.22432 82.54974 26.83328 c
82.54974 25.44225 83.65813 24.25667 85.04044 23.90237 c
86.42276 23.54807 87.53113 24.02505 87.53113 24.70749 c
87.53113 25.38994 86.42276 25.86691 85.04044 25.51262 c
83.65813 25.15788 82.54974 23.9723 82.54974 22.58127 c
82.54974 21.19025 83.65813 20.00465 85.04044 19.65036 c
86.42276 19.29607 87.53113 19.77306 87.53113 20.45549 c
87.53113 21.13794 86.42276 21.61491 85.04044 21.26062 c
83.65813 20.90587 82.54974 19.7203 82.54974 18.32925 c
82.54974 16.93823 83.65813 15.75264 85.04044 15.39835 c
86.42276 15.04405 87.53113 15.52104 87.53113 16.20348 c
87.53113 16.88593 86.42276 17.3629 85.04044 17.0086 c
83.65813 16.65387 82.54974 15.46829 82.54974 14.07726 c
82.54974 12.68622 83.65813 11.50064 85.04044 11.14635 c
86.42276 10.79204 87.53113 11.26904 87.53113 11.95146 c
87.53113 12.63391 86.42276 13.11089 85.04044 12.75659 c
83.65813 12.40186 82.54974 11.21628 82.54974 9.82524 c
82.54974 8.43422 83.65813 7.24863 85.04044 6.89433 c
86.42276 6.54004 87.53113 7.01703 87.53113 7.69946 c
87.53113 8.38191 86.42276 8.85889 85.04044 8.5046 c
83.65813 8.14986 82.54974 6.96428 82.54974 5.57324 c
82.54974 4.1822 83.65813 2.99663 85.04044 2.64232 c
85.04044 0 l
S
Q
Q
Q
Q
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NFPOHH+LMRoman10-Regular
%%EOF
